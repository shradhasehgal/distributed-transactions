// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "distributed-transactions/protos";


service DistributedTransactions {
  rpc beginTransaction(TxnIdPayload) returns (Reply) {}
  rpc commitCoordinator(TxnIdPayload) returns (Reply) {}
  rpc commitPeer(TxnIdPayload) returns (Reply) {}
  rpc performOperationCoordinator(TransactionOpPayload) returns (Reply) {}
  rpc performOperationPeer(TransactionOpPayload) returns (Reply) {}
  rpc abortCoordinator(TxnIdPayload) returns (Reply) {}
  rpc abortPeer(TxnIdPayload) returns (Reply) {}
  rpc preparePeer(TxnIdPayload) returns (Reply) {}
}

message TxnIdPayload {
    string txnId = 1;
}

message TransactionOpPayload {
    string ID = 1;
    string operation = 2;
    string account = 3;
    string branch = 4;
    int32 amount = 5;
}

message Reply {
    bool success = 1;
}

message PreparePayload {
    string txnId = 1;
}